class NotificationManager{constructor(i="sw.js"){this.hiddenInterval=null,this.serviceWorkerPath=i,this.initServiceWorker()}async initServiceWorker(){if("serviceWorker"in navigator)try{const i=await navigator.serviceWorker.register(this.serviceWorkerPath);console.log("✅ Service Worker Registered:",i)}catch(i){console.error("❌ SW Registration Failed:",i)}else console.warn("⚠️ Service Worker not supported in this browser.")}async requestPermission(){try{const i=await Notification.requestPermission();return"granted"!==i&&console.warn("⚠️ Notifications permission denied."),i}catch(i){return console.error("❌ Error requesting permission:",i),"denied"}}async sendNotification(i,e,t="",o="notify",n="https://github.com/Nawabi-Hamza"){if(!("Notification"in window))return void console.warn("🚨 Notifications not supported.");if("granted"!==Notification.permission)return void console.warn("🚨 Notifications are not allowed.");const r={body:e||"You have a new message.",icon:t||"https://uxwing.com/wp-content/themes/uxwing/download/communication-chat-call/two-way-chat-bubble-icon.png",tag:o,data:{url:n}};try{if("serviceWorker"in navigator){const e=await navigator.serviceWorker.getRegistration();e?e.showNotification(i,r):(console.warn("🚨 Service Worker not registered yet."),new Notification(i,r))}else new Notification(i,r)}catch(i){console.error("❌ Error sending notification:",i)}}autoNotifyWhenHidden(i,e,t="",o=6e4,n="https://github.com/Nawabi-Hamza"){document.addEventListener("visibilitychange",(()=>{if("hidden"===document.visibilityState){if(this.hiddenInterval)return;this.hiddenInterval=setInterval((()=>{this.sendNotification(i,e,t,"hidden-notify",n)}),o)}else clearInterval(this.hiddenInterval),this.hiddenInterval=null,this.sendNotification("Welcome Back!","We're happy to see you!",t,"hidden-notify",n)}))}}window.NotificationManager=NotificationManager;export default NotificationManager;